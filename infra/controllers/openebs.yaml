---
apiVersion: v1
kind: Namespace
metadata:
  name: openebs
  labels:
    toolkit.fluxcd.io/deployment: infra
    pod-security.kubernetes.io/audit: privileged
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/warn: privileged
---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: openebs
  namespace: openebs
spec:
  interval: 12h
  url: https://openebs.github.io/openebs
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: openebs
  namespace: openebs
spec:
  interval: 5m
  releaseName: openebs
  targetNamespace: openebs
  chart:
    spec:
      chart: openebs
      sourceRef:
        kind: HelmRepository
        name: openebs
      interval: 5m
  timeout: 5m
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    # release:
    #   version: "4.1.1"
    openebs-crds:
      csi:
        volumeSnapshots:
          enabled: false
          keep: true
    # Refer to https://github.com/openebs/dynamic-localpv-provisioner/blob/HEAD/deploy/helm/charts/values.yaml for complete set of values.
    localpv-provisioner:
      rbac:
        create: true
      hostpathClass:
        reclaimPolicy: Retain
        isDefaultClass: true
    # Refer to https://github.com/openebs/zfs-localpv/blob/HEAD/deploy/helm/charts/values.yaml for complete set of values.
    zfs-localpv:
      enabled: false
      crds:
        zfsLocalPv:
          enabled: false
        csi:
          volumeSnapshots:
            enabled: false
    # Refer to https://github.com/openebs/lvm-localpv/blob/HEAD/deploy/helm/charts/values.yaml for complete set of values.
    lvm-localpv:
      enabled: false
      crds:
        lvmLocalPv:
          enabled: false
        csi:
          volumeSnapshots:
            enabled: false
    # -- Configuration options for pre-upgrade helm hook job.
    preUpgradeHook:
      image:
        # -- The container image registry URL for the hook job
        registry: docker.io
        # -- The container repository for the hook job
        repo: bitnami/kubectl
        # -- The container image tag for the hook job
        tag: "1.25.15"
        # -- The imagePullPolicy for the container
        pullPolicy: IfNotPresent
    engines:
      local:
        lvm:
          enabled: false
        zfs:
          enabled: false
      replicated:
        mayastor:
          enabled: false
    mayastor:
      storageClasses:
        - name: mayastor-expandable
          allowVolumeExpansion: true
          parameters:
            protocol: nvmf
            repl: "1"
          provisioner: io.openebs.csi-mayastor
          isDefault: false  # Set to true if this is the default class
      # -- Enable Mayastor storage engine
      # Note: Enabling this will remove LocalPV Provisioner and NDM (default chart components).
      enabled: true

      # Sample configuration, if you want to configure mayastor with custom values.
      # This is a small part of the full configuration. Full configuration available
      # here - https://github.com/openebs/mayastor-extensions/blob/v2.5.0/chart/values.yaml

      image:
        # -- Image registry to pull Mayastor product images
        registry: docker.io
        # -- Image registry's namespace
        repo: openebs
        # -- Release tag for Mayastor images
        tag: v2.5.0
        # -- ImagePullPolicy for Mayastor images
        pullPolicy: IfNotPresent

      # -- Pod scheduling priority
      # ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
      priorityClassName: ""

      base:
        # docker-secrets required to pull images if the container registry from image.Registry is protected
        imagePullSecrets:
          # -- Enable imagePullSecrets for pulling our container images
          enabled: false
          # Name of the imagePullSecret in the installed namespace
          secrets: []

        metrics:
          # -- Enable the metrics exporter
          enabled: true

        jaeger:
          # -- Enable jaeger tracing
          enabled: false

      operators:
        pool:
          # -- Log level for diskpool operator service
          logLevel: info

      jaeger-operator:
        # Name of jaeger operator
        name: "{{ .Release.Name }}"
        crd:
          # Install jaeger CRDs
          install: false
        jaeger:
          # Install jaeger-operator
          create: false
        rbac:
          # Create a clusterRole for Jaeger
          clusterRole: true

      agents:
        core:
          # -- Log level for the core service
          logLevel: info
          capacity:
            thin:
            # -- The allowed pool commitment limit when dealing with thin provisioned volumes.
            # Example: If the commitment is 250 and the pool is 10GiB we can overcommit the pool
            # up to 25GiB (create 2 10GiB and 1 5GiB volume) but no further.
            poolCommitment: "250%"
            # -- When creating replicas for an existing volume, each replica pool must have at least
            # this much free space percentage of the volume size.
            # Example: if this value is 40, the pool has 40GiB free, then the max volume size allowed
            # to be created on the pool is 100GiB.
            volumeCommitment: "40%"
            # -- Same as the `volumeCommitment` argument, but applicable only when creating replicas
            # for a new volume.
            volumeCommitmentInitial: "40%"
        ha:
          enabled: false
          node:
            # -- Log level for the ha node service
            logLevel: info
          cluster:
            # -- Log level for the ha cluster service
            logLevel: info

      apis:
        rest:
          # -- Log level for the rest service
          logLevel: info
          # -- Number of replicas of rest
          replicaCount: 1

      csi:
        image:
          # -- Image registry to pull all CSI Sidecar images
          registry: registry.k8s.io
          # -- Image registry's namespace
          repo: sig-storage
          # -- imagePullPolicy for all CSI Sidecar images
          pullPolicy: IfNotPresent
          # -- csi-provisioner image release tag
          provisionerTag: v3.5.0
          # -- csi-attacher image release tag
          attacherTag: v4.3.0
          # -- csi-snapshotter image release tag
          snapshotterTag: v6.3.1
          # -- csi-snapshot-controller image release tag
          snapshotControllerTag: v6.3.1
          # -- csi-node-driver-registrar image release tag
          registrarTag: v2.9.0

        controller:
          # -- Log level for the csi controller
          logLevel: info
          resources:
            limits:
              # -- Cpu limits for csi controller
              cpu: "32m"
              # -- Memory limits for csi controller
              memory: "128Mi"
            requests:
              # -- Cpu requests for csi controller
              cpu: "16m"
              # -- Memory requests for csi controller
              memory: "64Mi"
          # -- Set tolerations, overrides global
          tolerations: []
          # -- Set PriorityClass, overrides global
          priorityClassName: ""
          # -- Prevent modifying the volume mode when creating a PVC from an existing VolumeSnapshot
          preventVolumeModeConversion: true
        node:
          logLevel: info
          topology:
            segments:
              openebs.io/csi-node: mayastor
            # -- Add topology segments to the csi-node daemonset node selector
            nodeSelector: false
          resources:
            limits:
              # -- Cpu limits for csi node plugin
              cpu: "100m"
              # -- Memory limits for csi node plugin
              memory: "128Mi"
            requests:
              # -- Cpu requests for csi node plugin
              cpu: "100m"
              # -- Memory requests for csi node plugin
              memory: "64Mi"
          nvme:
            # The nvme_core module and nvme block io timeout in humantime
            # By default it uses the "io_engine.nvme.ioTimeout" + 10s
            # Do not modify this unless you're really sure about its effects
            io_timeout: ""
            # -- The ctrl_loss_tmo (controller loss timeout) in seconds
            ctrl_loss_tmo: "1980"
            # Kato (keep alive timeout) in seconds
            keep_alive_tmo: ""
          # -- The kubeletDir directory for the csi-node plugin
          kubeletDir: /var/lib/kubelet
          pluginMounthPath: /csi
          socketPath: csi.sock
          # -- Set tolerations, overrides global
          tolerations: []
          # -- Set PriorityClass, overrides global
          priorityClassName: ""

      io_engine:
        # -- Log level for the io-engine service
        logLevel: info
        api: "v1"
        target:
          nvmf:
            # -- NVMF target interface (ip, mac, name or subnet)
            iface: ""
            # -- Reservations Persist Through Power Loss State
            ptpl: true
            # NVMF target Command Retry Delay for volume target initiators
            hostCmdRetryDelay:
              # A command retry delay in seconds. A value of 0 means no delay, host may retry immediately
              crdt1: 30

      etcd:
        # Pod labels; okay to remove the openebs logging label if required
        podLabels:
          app: etcd
          openebs.io/logging: "true"
        # -- Number of replicas of etcd
        replicaCount: 1
        persistence:
          # -- If true, use a Persistent Volume Claim. If false, use emptyDir.
          enabled: true
          # -- Will define which storageClass to use in etcd's StatefulSets
          # a `manual` storageClass will provision a hostpath PV on the same node
          # an empty storageClass will use the default StorageClass on the cluster
          storageClass: ""
          # -- Volume size
          size: 2Gi
        podAntiAffinityPreset: "hard"

        nvme:
          # -- Timeout for IOs
          # The default here is exaggerated for local disks but we've observed that in
          # shared virtual environments having a higher timeout value is beneficial.
          # In certain cases, you may have to set this to an even higher value. For example,
          # in Hetzner we've had better results setting it to 300s.
          # Please adjust this according to your hardware and needs.
          ioTimeout: "110s"
          # Timeout for admin commands
          adminTimeout: "30s"
          # Timeout for keep alives
          keepAliveTimeout: "10s"
          tcp:
            # -- Max size setting (both initiator and target) for an NVMe queue
            # -- You may need to increase this for a higher outstanding IOs per volume
            maxQueueDepth: "32"

      loki-stack:
        # -- Enable loki log collection for Mayastor components
        enabled: false

      obs:
        callhome:
          # -- Enable callhome
          enabled: false
          # -- Log level for callhome
          logLevel: "info"

      localpv-provisioner:
        # -- Enables the openebs dynamic-localpv provisioner. If disabled, modify etcd and loki-stack storage class accordingly.
        enabled: true
        # Enable/disable the openebs NDM sub-chart. It's recommended to keep this disabled.
        openebsNDM:
          enabled: false
        # Enable/disable the creation of the openebs-device StorageClass. It's recommended to keep this disabled.
        deviceClass:
          enabled: false
        hostpathClass:
          enabled: false
